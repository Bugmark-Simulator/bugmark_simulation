/ SPDX-License-Identifier: MPL-2.0
.row
  .col-md-12
    h2 Admin
.row
  .col-md-6
    div
      == btn_start_stop_nightly
      .ml-1
        ' Simulation speed: One day every
        '
        = TS.nightly_scr["seconds_for_day_switching"]
        '
        ' seconds

      a.btn.btn-secondary[href="/admin/nextday"] Go to Next day
      a.ml-1.btn.btn-secondary[href="/admin/draw_graphs"] Redraw Graphs
    h3 Status
    div
      ' Last graph update:
      '
      - if $last_graph_update.nil?
        span NEVER
      - else
        span[class="countup-sec" secs="#{(Time.now - $last_graph_update).round}"]
          = (Time.now - $last_graph_update).round
      '
      ' seconds ago
    div
      ' Next day in
      - if $run_nightly.nil?
        ' NEVER
      - else
        span[class="countdown-sec" secs="#{($run_nightly - Time.now).round}"]
          = ($run_nightly - Time.now).round
      '
      ' seconds


  .col-md-6
    a.btn.btn-primary[href="/admin/users"] Open Users Admin
    /a.btn.btn-primary[href="/admin/settings"] Settings Admin

.row
  .col-md-12
    table.table.table-sm.table-hover.table-striped.table-condensed
      thead
        tr
          th Project
          th Open Issues
          th Open Offers
          th Open Contracts
          th
            ' Bots
            .btn-group
              a.btn.btn-success[href="/admin/start_bot/all"] Start all
              a.btn.btn-danger[href="/admin/stop_bot/all"] Stop all

      tbody
        - if Tracker.count > 0
          - Tracker.all.each do |tracker|
            tr.projsel[projuuid="#{tracker.uuid}" projname="#{tracker.name}"]
              td = tracker.name
              td
                .btn-group
                  a.btn.btn-dark[href="/project_issues/#{tracker.uuid}"] #{Issue.open.where(stm_tracker_uuid: tracker.uuid).count}
                  a.btn.btn-primary[href="/admin/issue_new/#{tracker.uuid}"] +1
                  a.btn.btn-info[href="/admin/issue_new/#{tracker.uuid}/10"] +10
              td = Offer.open.where(stm_tracker_uuid: tracker.uuid).count
              td = Contract.open.where(stm_tracker_uuid: tracker.uuid).count
              td
                .btn-group
                  == btn_bot_start_stop(tracker.uuid)
                  a.btn.btn-secondary[href="/admin/bot/#{tracker.uuid}"] Setup Bot
        - else
          tr
            td[colspan=4] No projects
    p To add a project, <a href="/admin/users">create a new funder</a>. Each funder is responsible for a project.
