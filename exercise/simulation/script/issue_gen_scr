#!/usr/bin/env ruby

# ----- setup -----

Dir.chdir File.expand_path(__dir__)
require_relative '../../Base/lib/dotenv'
TRIAL_DIR = dotenv_trial_dir(__dir__)

# ----- libraries -----

require_relative '../../Base/lib/exchange'
require_relative '../../Base/lib/trial_settings'
require 'awesome_print'
require 'securerandom'
require 'yaml'

# ----- read settings -----

settings = YAML.load_file('issue_gen_scr_setting.yml')
settings1 = YAML.load_file('skill.yml')

# ----- info -----

puts "EXCHANGE_DIR=#{Exchange.src_dir}"
#puts 'EXERCISE SETTINGS'
#ap TrialSettings.settings

# ----- load -----

puts 'LOADING RAILS'
Exchange.load_rails

#-----issues------
puts 'CREATE A BUGMARK ISSUE'
#binding.pry
id =1
id = Issue.last.id unless Issue.last.nil?
Tracker.all.each do |i|
  settings['number_of_issues_tracker'].times do
    id = id+1
    opts = {
      stm_title: SecureRandom.hex(2),
      stm_tracker_uuid: i.uuid,
      stm_status: 'open',
      stm_body: ' ',
      exid: id
    }
    issueid = FB.create(:issue, opts).issue.id
    # update user jfields through sql

    # {\"skill\":{#{settings1['skills'].sample(settings['number_of_skills_issue'])}:0}}
    skill_array = settings1['skills'].sample(settings['number_of_skills_issue'])
    myhash = {"skill"=> {}}
    skill_array.each do |i|
      myhash["skill"]["#{i}"] = 0
    end
    sql = "UPDATE issues SET jfields = '#{JSON.generate(myhash)}' WHERE id='#{issueid}';"
    #binding.pry
    ActiveRecord::Base.connection.execute(sql).to_a
  end
end
puts 'DONE'
