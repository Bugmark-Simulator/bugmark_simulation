#!/usr/bin/env ruby

require 'securerandom'
require 'iora'

# ----- command line -----

CMD   = __FILE__.split("/").last
DIR   = File.expand_path(ARGV[0])
USAGE = "Usage: #{CMD} <trial_dir>"

abort USAGE if ARGV.length != 1
abort "#{USAGE}\nERROR: #{ARGV[0]} not a directory" unless File.directory?(DIR)

# ----- filepaths -----

TRIAL_DIR = DIR
DOC_DIR   = "Python"
TIMESTAMP = Time.now.strftime("%d%H%M%S")
TASK_FILE = "#{TRIAL_DIR}/.trial_data/python_tasks_#{TIMESTAMP}.yml"
TERM_FILE = "#{TRIAL_DIR}/.trial_data/python_terms_#{TIMESTAMP}.yml"
HASH_FILE = "#{TRIAL_DIR}/.trial_data/python-hashlog.txt"
LCL_SETTINGS = File.expand_path(__dir__) + "/python_settings.yml"

puts "TRIAL DIR IS #{TRIAL_DIR}"
puts "DOC DIR IS #{DOC_DIR}"

# ----- settings and libraries -----

puts "ESTABLISH MEDITATIONS SETTINGS FOR #{TRIAL_DIR}"

Dir.chdir TRIAL_DIR
system "mkdir -p #{DOC_DIR}"
system "mkdir -p .trial_data/archive"
system "mv .trial_data/*python_* .trial_data/archive 2> /dev/null"
system "cp #{LCL_SETTINGS} #{TRIAL_DIR}/.trial_data"

require_relative '../../exercise/Base/lib/trial_settings'

# ----- execution -----

Dir.chdir DOC_DIR

def ftgt(idx, inputs)
  fbase = inputs[idx].split("/").last.split(".").first
  "#{fbase}_#{TIMESTAMP}.py"
end

puts "GENERATE LIST OF SOURCE FILES"
DOC_SRC_DIR   = File.expand_path("./Scripts", __dir__)
HASH_LOGS     = File.exist?(HASH_FILE) ? File.readlines(HASH_FILE) : []
DOC_SRC_RAW   = Dir.glob("#{DOC_SRC_DIR}/*py").shuffle


if (DOC_SRC_RAW.length - HASH_LOGS.length) < TS.python_num_docs
  system "rm -f #{HASH_FILE}"
end

DOC_SRC_FILES = DOC_SRC_RAW - HASH_LOGS

puts "GENERATE DOCS INTO DIRECTORY #{TS.trial_dir}/#{DOC_DIR}"
File.open(HASH_FILE, 'a') do |hash_file|
  (1..TS.python_num_docs).to_a.each do |idx|
    hash_file.puts DOC_SRC_FILES[idx]
    src = DOC_SRC_FILES[idx]
    tgt = ftgt(idx, DOC_SRC_FILES)
    system "cp #{src} #{tgt}"
    print '.'
  end
end
puts ''

puts "GENERATE TASKS INTO FILE #{TASK_FILE}"
Dir.chdir TS.trial_dir
File.open(TASK_FILE, 'w') do |f|
  f.puts "---"
  Dir.glob("#{DOC_DIR}/*_#{TIMESTAMP}.py").each do |fn|
    title = fn.split('/').last.split(/_\d\d\d\d\./).first
    url  = "http://#{TS.repo_url}/blob/master/#{fn}"
    link = %Q[<a href="#{url}">#{url}</a>]
    msg  =  %Q[Solve Python programming challenge and create a pull request with solution:]
    body =  "#{msg}<br/>#{link}<p><p/>/#{SecureRandom.hex(3)}"
    f.puts "- title:  Python Challenge - #{title}"
    f.puts "  labels: EXERCISE,PYTHON"
    f.puts "  body:   '#{body}'"
    print '.'
  end
end
puts ''

puts "GENERATE TERMS INTO FILE #{TERM_FILE}"
tasks = YAML.load_file(TASK_FILE)
File.open(TERM_FILE, 'w') do |f|
  f.puts "---"
  tasks.each do |task|
    f.puts "- price:  #{TS.python_price}"
    f.puts "  volume: #{TS.python_volume}"
    f.puts "  hexid:  #{Iora.hexid_for(task)}"
    print '.'
  end
end
puts ''

puts 'DONE'

