#!/usr/bin/env ruby

# ----- setup -----

Dir.chdir File.expand_path(__dir__)
require_relative '../../Base/lib/dotenv'
TRIAL_DIR = dotenv_trial_dir(__dir__)

# ----- libraries -----

require_relative '../../Base/lib/exchange'
require_relative '../../Base/lib/trial_settings'
require 'awesome_print'
require 'securerandom'
# require ./user_gen_scr_setting
require 'yaml'

# ----- info -----

puts "EXCHANGE_DIR=#{Exchange.src_dir}"
#puts 'EXERCISE SETTINGS'
#ap TrialSettings.settings

# ----- load -----

puts 'LOADING RAILS'
Exchange.load_rails

# ----- accounts -----
puts 'CREATE BUGMARK USER ACCOUNTS'
#binding.pry
TS.user_gen_scr["create_users"].each do |users|
  if(users['number_of_new_users'] > 0) then
    (1..users['number_of_new_users']).each do |i|
      username= SecureRandom.hex(2)
      emailaddr = username+'@example.com'
      userpassword = SecureRandom.hex(2)
      # nice user name
      if User.count < TS.usernames.count then
        TS.usernames.shuffle.each do |potential_name|
          potential_name = potential_name.gsub(/[^0-9a-zA-Z]/i, '')
          if User.where(name: potential_name).count == 0 then
            username = potential_name
            break
          end
        end
      end
      opts = {
        balance: users['budget'],
        name: username,
        email: emailaddr,
        password: userpassword
      }
      userid = FB.create(:user, opts).user.id
      tracker = ""
      # find a sensible projectname
      trackername = SecureRandom.hex(2)
      if Tracker.count < TS.projectnames.count then
        TS.projectnames.shuffle.each do |potential_name|
          if Tracker.where(name: potential_name).count == 0 then
            trackername = potential_name
            break
          end
        end
      end
      if(users['group']=='funder') then
        # generate a new tracker
        opts = {
          type: "Tracker::Test",
          name: "#{trackername}"
        }
        tracker = FB.create(:tracker, opts).tracker.uuid
      end
      # update user jfields through sql
      skills = TS.skills["task_skills"].shuffle
      bonus_skills = skills.pop(TS.skills["skills_bonus_per_user"])
      malus_skills = skills.pop(TS.skills["skills_malus_per_user"])
      sql = "UPDATE users SET jfields = '{\"skill_bonus\":#{bonus_skills},
      \"skill_malus\":#{malus_skills},
      \"password\":\"#{userpassword}\",\"type\":\"#{users['group']}\",
      \"treatment\":\"#{users['treatment']}\",\"tracker\":\"#{tracker}\"}' WHERE id='#{userid}';"
      ActiveRecord::Base.connection.execute(sql).to_a
      puts "userid: #{userid}"
    end
  end
end
puts 'DONE'
