/ SPDX-License-Identifier: MPL-2.0
css:
  .ttip {
    background: lightgray;
    padding-left: 2px;
    padding-right: 2px;
  }
  .btn-xs {
    padding: 0 5px 0 5px;
    margin: 0;
    margin-left: 5px;
  }
  .bxs {
    padding-top: 0;
    padding-bottom: 0;
    line-height: 1;
  }

.row
  .col-md-12
    h2 Issue ##{@issue.id}
.row
  .col-md-5
    p
      b Project:<br/>
      == Tracker.where(uuid: @issue.stm_tracker_uuid).first.name
      div
        a[href='/project##{@issue.stm_tracker_uuid}'] Go to Projects Dashboard
      div
        a[href="/project_issues/#{@issue.stm_tracker_uuid}"] View issues for this project
    p
      b Status:<br/>
      == @issue.stm_status

  .col-md-7
    h2 Tasks required to close issue
    table.table.table-sm[style='margin-top: 5px;']
      thead
        tr
          th Task
          th Skill Required
          th Complete task to close issue
          th Your time to complete task
      tbody
        - counter = 0
        - @issue.jfields["skill"].each do |task, status|
          - counter += 1
          tr
            td Task #{counter}
            td = task
            td == task_action(task, @issue.uuid, status)
            td #{real_seconds_to_simulated_time(queue_task_time(task))}
    /a[href='/account'] View my Queue
    == queue_length(current_user)

.row[style="background-color:#eee"]
  .row-12.mx-auto.mt-2
    h2 Market Place for this issue

.row
  .col-12.py-2
    h3 Offers
    table.table.table-sm
      thead
        tr
          th
            ' Funder
            a.obu.btn.btn-secondary[href="#"] create offer to fund
          /th Funder cost
          th
            ' Worker
            a.obf.btn.btn-secondary[href="#"] create offer to work
          /th Worker cost
          th Payout
          th Maturation
          th Resolution
          th
      tbody
        / then display BU offers
        - @issue.offers_bu.each do |offer|
          - next unless offer.is_open?
          tr
            td == offer_funder_link(current_user, offer)
            /td #{offer.value.to_i} tokens
            td == offer_worker_link(current_user, offer)
            /td #{offer.fixer_cost.to_i} tokens
            td #{offer.volume} tokens
            td == offer_maturation_date(offer)
            td == offer_awardee(offer)
            td
              - if (offer.user.uuid == current_user.uuid) && offer.is_open?
                a.btn.btn-secondary.cancelOffer[href="/offer_cancel/#{offer.uuid}"] Cancel my offer
        / then display BF offers
        - @issue.offers_bf.each do |offer|
          - next unless offer.is_open?
          tr
            td == offer_funder_link(current_user, offer)
            /td #{offer.value.to_i} tokens
            td == offer_worker_link(current_user, offer)
            /td #{offer.fixer_cost.to_i} tokens
            td #{offer.volume} tokens
            td == offer_maturation_date(offer)
            td == offer_awardee(offer)
            td
              - if (offer.user.uuid == current_user.uuid) && offer.is_open?
                a.btn.btn-secondary.cancelOffer[href="/offer_cancel/#{offer.uuid}"] Cancel my offer
        / first display matched contracts
        - @issue.offers_bu.crossed.each do |offer|
          tr
            td == offer_funder_link(current_user, offer)
            /td #{offer.value.to_i} tokens
            td == offer_worker_link(current_user, offer)
            /td #{offer.fixer_cost.to_i} tokens
            td #{offer.volume} tokens
            td == offer_maturation_date(offer)
            td == offer_awardee(offer)
            td
              - if (offer.user.uuid == current_user.uuid) && offer.is_open?
                a.btn.btn-secondary.cancelOffer[href="/offer_cancel/#{offer.uuid}"] Cancel my offer

/    h3 Expired or Canceled Offers
/    table.table.table-sm
/      thead
/        tr
/          th
/            ' Funder
/          /th Funder cost
/          th
/            ' Worker
/          /th Worker cost
/          th Payout
/          th Maturation
/          th Resolution
/          th
/      tbody
/        / then display BU offers
/        - @issue.offers_bu.each do |offer|
/          - next if offer.is_crossed?
/          - next if offer.is_open?
/          tr
/            td == offer_funder_link(current_user, offer)
/            /td #{offer.value.to_i} tokens
/            td == offer_worker_link(current_user, offer)
/            /td #{offer.fixer_cost.to_i} tokens
/            td #{offer.volume} tokens
/            td == offer_maturation_date(offer)
/            td == offer_awardee(offer)
/            td
/              - if (offer.user.uuid == current_user.uuid) && offer.is_open?
/                a.btn.btn-secondary.cancelOffer[href="/offer_cancel/#{offer.uuid}"] Cancel my offer
/        / then display BF offers
/        - @issue.offers_bf.each do |offer|
/          - next if offer.is_crossed?
/          - next if offer.is_open?
/          tr
/            td == offer_funder_link(current_user, offer)
/            /td #{offer.value.to_i} tokens
/            td == offer_worker_link(current_user, offer)
/            /td #{offer.fixer_cost.to_i} tokens
/            td #{offer.volume} tokens
/            td == offer_maturation_date(offer)
/            td == offer_awardee(offer)
/            td
/              - if (offer.user.uuid == current_user.uuid) && offer.is_open?
/                a.btn.btn-secondary.cancelOffer[href="/offer_cancel/#{offer.uuid}"] Cancel my offer


.row[style="background-color:#eee"]
  .row-12.mx-auto.mt-2
    h2 Comments for this issue

.row
  .col-md-1
  .col-md-10.mt-2
    table.table.table-sm[style='margin-top: 10px;']
      thead
        tr
          th User
          th Comments
          th Posted
          /th Action
      tbody
        - @comments.each do |comment|
          tr
            td == comment.user_name
            td == comment.comment
            td
              == BugmTime.now.to_date.mjd - comment.comment_date.strftime("%Y-%m-%d").to_date.mjd
              '
              ' days ago
            /td == delete_comment(comment.id, comment.user_uuid)
  .col-md-1

/h3 Comment on issue to coordinate with others to complete the tasks.
.row
  .col-md-4
  .col-md-4
    .wrapper
      form.form-signin[method='post' action='/issue_comments/#{@issue.uuid}']
        textarea.form-control[name="Comments" placeholder="Write your comment here to coordinate with others to complete the tasks." required="required"]
        p
        button.btn.btn-lg.btn-primary.btn-block type="Comments"  Save Comment
  .col-md-4

.modal#modalOb
  .modal-dialog.modal-lg
    form.form-inline[action="/offer_create/#{@issue.uuid}" method="post"]
      input#today[type='hidden' value='#{dstr(BugmTime.now)}']
      input#side[type='hidden' name='side' value='']
      .modal-content
        .modal-header
          h5.modal-title Create offer to <b id='titleType'>TBD</b> #{@issue.xid.capitalize}
          button.close[type="button" data-dismiss="modal"]
            span &times;
        .modal-body
          .row
            .col-md-6
              p <b>Payout</b><br/>
              select.form-control#valueSel>[name='value']
                option[value="20" selected="selected"]  20
                option[value="40"]                      40
                option[value="60"]                      60
                option[value="80"]                      80
                option[value="100"]                     100
                option[value="120"]                     120
                option[value="140"]                     140
                option[value="160"]                     160
                option[value="180"]                     180
                option[value="200"]                     200
              ' tokens
            .col-md-6
              p[style='margin-bottom: 23px;'] <b>You pay:</b><br/>
              span#contribution> TBD
              | tokens
          .row
            .col-md-12
              hr
          .row
            .col-md-6
              p[style='margin-bottom: 20px;'] <b>Matures in</b><br/>
              .btn-group.btn-group-toggle#maturation[data-toggle="buttons"]
                - [0,1,2,3,4,5].each do |days|
                  label.btn.btn-secondary.btn-sm
                    input[type="radio" value="#{dstr(BugmTime.end_of_day(days))}" name="maturation" id="mat#{days}" required] #{days} days
            .col-md-6
              /p <b>Expires</b><br/>

              /select.form-control.mb-2.mr-sm-2#expSel[name='expiration']

        .modal-footer
          button.btn.btn-primary[type="submit"] Create
          button.btn.btn-secondary[type="button" data-dismiss="modal"] Cancel

.modal#modalOs
  .modal-dialog
    .modal-content
      .modal-header
        h5.modal-title create an offer to sell your position
        button.close[type="button" data-dismiss="modal"]
          span &times;
      .modal-body
        p You purchased a position on <span id='ixid'>TBD</span> for
          <span id='oval'>TBD</span> tokens.
        p Use this dialog to create an offer to sell your position.
        form.form-inline#mform[action="/position_sell/TBD" method="post"]
          label.mb-2.mr-sm-2 Offer to sell your position for
          input.form-control.mb-2.mr-sm-2[name='value' type='number' min='0' multiple='1']
          label.mb-2.mr-sm-2[for='value'] tokens
          button.btn.btn-primary.mb-2[type="submit"] Create
      .modal-footer
        button.btn.btn-secondary[type="button" data-dismiss="modal"] Cancel

- content_for :page_js do
  script[src="/coffee/issue.js"]
