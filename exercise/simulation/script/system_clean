#!/usr/bin/env ruby

# ----- setup -----

Dir.chdir File.expand_path(__dir__)
require_relative '../../Base/lib/dotenv'
TRIAL_DIR = dotenv_trial_dir(__dir__)

# ----- libraries -----

require_relative '../../Base/lib/exchange'
require_relative '../../Base/lib/trial_settings'
require 'awesome_print'
require 'securerandom'

# ----- info -----

puts "EXCHANGE_DIR=#{Exchange.src_dir}"
puts 'EXERCISE SETTINGS'
ap TrialSettings.settings

# ----- load -----

puts 'LOADING RAILS'
Exchange.load_rails

puts 'LOADING IORA'
require 'iora'

# ----- reset -----

puts 'RESET ALL BUGMARK DATA AND CREATE AN ADMIN USER'
BugmHost.reset

# ----- accounts -----
def pwd_for(email)
  name = email.split("@").first
  "bugmark-#{name}"
end

puts 'CREATE A BUGMARK FUNDER ACCOUNT'
opts = {
  balance: 10000,
  email: TS.funder_email,
  password: pwd_for(TS.funder_email)
}
FB.create(:user, opts).user

puts 'CREATE BUGMARK WORKER ACCOUNTS'
TS.participants.each do |email|
  opts = {
    email:    email.chomp.strip,
    password: pwd_for(email.chomp.strip),
    name:     SecureRandom.hex(2),
    balance:  TS.seed_balance || 500
  }
  FB.create(:user, opts)
  print '.'
end
puts ''

# ----- bugmark tracker -----

puts 'CREATE A BUGMARK TRACKER'
FB.create(:tracker, name: 'TraderExercise')

# ----- issues -----

puts 'CLOSE ALL EXERCISE-TAGGED ISSUES THAT ARE OPEN'
`rm -f #{TS.tracker_name}` if TS.tracker_type.to_s == 'yaml'
iora = Iora.new(TS.tracker_type, TS.tracker_name, labels: "EXERCISE")
iora.issues.each do |el|
  iora.close(el['sequence'])
  print '.'
end
puts ''

puts 'DONE'
