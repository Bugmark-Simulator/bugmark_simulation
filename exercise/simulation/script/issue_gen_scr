#!/usr/bin/env ruby
# SPDX-License-Identifier: MPL-2.0

# ----- setup -----

Dir.chdir File.expand_path(__dir__)
require_relative '../../Base/lib/dotenv'
TRIAL_DIR = dotenv_trial_dir(__dir__)

# ----- libraries -----

require_relative '../../Base/lib/exchange'
require_relative '../../Base/lib/trial_settings'
require 'awesome_print'
require 'securerandom'
require 'yaml'


# ----- info -----

puts "EXCHANGE_DIR=#{Exchange.src_dir}"

# ----- load -----

puts 'LOADING RAILS'
Exchange.load_rails

#-----issues------
puts 'CREATE BUGMARK ISSUES'
#binding.pry
id = 0
id = Issue.last.id unless Issue.last.nil?
Tracker.all.each do |i|
  TS.issue_gen_scr["number_of_issues_per_tracker"].times do
    if id == 1 then
      # update id, if last issue was first to create
      # fixes an issue where exid <> id
      id = Issue.last.id unless Issue.last.nil?
    end
    id = id+1
    opts = {
      stm_title: SecureRandom.hex(2),
      stm_tracker_uuid: i.uuid,
      stm_status: 'open',
      stm_body: ' ',
      exid: id
    }
    issueid = FB.create(:issue, opts).issue.id
    # update user jfields through sql

    skill_array = TS.skills["task_skills"].sample(TS.skills["number_of_skills_per_issue"])
    myhash = {"skill"=> {}}
    skill_array.each do |i|
      myhash["skill"]["#{i}"] = 0
    end
    myhash["created_at"] = BugmTime.now.strftime("%Y-%m-%d")
    myhash["first_activity"] = ""
    myhash["last_activity"] = ""
    sql = "UPDATE issues SET jfields = '#{JSON.generate(myhash)}' WHERE id='#{issueid}';"
    #binding.pry
    ActiveRecord::Base.connection.execute(sql).to_a

    puts "created issue #{id}"
  end
end
puts 'DONE'
